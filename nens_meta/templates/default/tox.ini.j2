{{ header }}
[tox]
# If locally you don't have all the various python versions: that's OK, we'll skip them.
skip_missing_interpreters = true
# We need 4.4.0 for constrain_package_deps.
min_version = 4.4.0
# envlist is what gets run by default if you just type "tox".
# The idea is that just running "tox" is equivalent to the checks that happen on github.
envlist =
{{ envlist }}
{# Adjust envlist in .nens.toml, [tox] > default_environments (which is a list). #}

{% if is_python_project %}
[testenv]
description = Run the tests
use_develop = true
skip_install = false
constrain_package_deps = true
extras = test
commands = pytest --no-header --tb line
{% endif %}

[testenv:lint]
description = Run formatters/linters for basic code sanity and neatness
skip_install = true
deps = pre-commit
commands = pre-commit run --all

{% if is_python_project %}
[testenv:test]
description = Run the tests with the default python

[testenv:coverage]
description = Get a test coverage report
use_develop = true
skip_install = false
constrain_package_deps = true
allowlist_externals = sh
deps = coverage
extras = test
commands =
    coverage run -m pytest --no-header --tb line
    coverage xml
    coverage html
    - sh -c 'coverage report --format markdown > for_step_summary.md'
    coverage report {% if minimum_coverage %}--fail-under {{ minimum_coverage }}{% endif %} --format text
    {# Adjust minimum coverage in .nens.toml, [tox] > minimum_coverage #}

[testenv:build_package]
description = Build and check python package
skip_install = true
deps =
    twine
    build
    wheel
commands =
    python -m build
    twine check dist/*
{% endif %}
