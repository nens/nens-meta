[tox]
# We need 4.4.0 for constrain_package_deps.
min_version = 4.4.0
# envlist is what gets run by default if you just type "tox".
envlist =
    lint
    py311
    py312

[testenv]
description = run the tests
use_develop = true
skip_install = false
constrain_package_deps = true
# "extras = test" means "install the [test] dependencies from pyproject.toml
extras =
    test
commands =
    pytest

[testenv:lint]
description = run linters that will help improve the code style
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run -a

# The commands/environments below are for easily calling them from github actions with a
# fixed name. And for a bit of automation.
[testenv:format]
description = automatically reformat code
skip_install = true
deps =
    ruff
commands =
    ruff format

[testenv:coverage]
description = get a test coverage report
use_develop = true
skip_install = false
constrain_package_deps = true
deps =
    coverage
extras =
    test
commands =
    coverage run -m pytest
    coverage xml
    coverage html
    coverage report --format markdown > coverage.md
    coverage report --format text


# Reinout suspects the next ones can come in handy, even though they're not enabled by
# default.
[testenv:release-check]
description = ensure that the distribution is ready to release
skip_install = true
deps =
    twine
    build

commands =
    python -m build --sdist
    twine check dist/*

[testenv:dependencies]
description = check if the package defines all its dependencies
skip_install = true
deps =
    build
    z3c.dependencychecker==2.14.3
commands =
    python -m build --sdist
    dependencychecker

[testenv:dependencies-graph]
description = generate a graph out of the dependencies of the package
skip_install = false
allowlist_externals =
    sh
deps =
    pipdeptree==2.5.1
    graphviz  # optional dependency of pipdeptree
commands =
    sh -c 'pipdeptree --exclude setuptools,wheel,pipdeptree --graph-output png > dependencies.png'
